[Settings]
Enabled = true

ShowKnightInfo = true
ShowCustomInfo = true
ShowSceneName = true
ShowTime = true
ShowSplits = false
ShowTimeOnly = false
ShowTimeMinusFixedTime = true
ShowRng = true

SplitFileLocation = ./split.lss

ShowEnemyHp = true
ShowEnemyPosition = true
ShowEnemyVelocity = true

ShowHitbox = true
ShowOtherHitbox = false

PositionPrecision = 5
VelocityPrecision = 3
ForceGatheringSwarm = false
GiveLantern = false
UseLegacyRngSync = false
StartingGameTime = 0
PauseTimer = false

# 碰撞箱颜色 ARGB 格式，注释或删除则不显示该类 hitbox
KnightHitbox = 0xFF00FF00
AttackHitbox = 0xFF00FFFF
EnemyHitbox = 0xFFFF0000
HarmlessHitbox = 0xFFFFFF00
TriggerHitbox = 0xFFBB99FF
TerrainHitbox = 0xFFFF8844
OtherHitbox = 0xFFFFFFFF

# 默认为 1，数值越大视野越广
CameraZoom = 1
CameraFollow = false
DisableCameraShake = false

[CustomInfoTemplate]
# 该配置用于定制附加显示的数据，需要注意如果调用属性或者方法有可能会造成 desync
# 例如 HeroController.CanJump() 会修改 ledgeBufferSteps 字段，请查看源码确认是否安全。定制数据格式如下：
# {UnityObject子类名.字段/属性/方法.字段/属性/方法……}
# {GameObjectName.字段/属性/方法.字段/属性/方法……}
# 只支持无参方法以及字符串作为唯一参数的方法
# 常用的类型 PlayerData 和 HeroControllerStates 可以简写
# 支持配置多行，并且同一行可以存在多个 {}
# paused: {GameManager.isPaused}
# canAttack: {HeroController.CanAttack()}
# geo: {HeroController.playerData.geo}
# geo: {PlayerData.geo}
# jumping: {HeroControllerStates.jumping}
# component: {Crawler Fixed.GetComponentInChildren(BoxCollider2D)}
# crawler hp: {Crawler Fixed.LocateMyFSM(health_manager_enemy).FsmVariables.FindFsmInt(HP)}